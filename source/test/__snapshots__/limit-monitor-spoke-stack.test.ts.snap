// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LimitMonitorSpokeStack snapshot test 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": Object {
    "EventsMap": Object {
      "Checks": Object {
        "Services": "\\"AutoScaling\\",\\"CloudFormation\\",\\"DynamoDB\\",\\"EBS\\",\\"EC2\\",\\"ELB\\",\\"IAM\\",\\"Kinesis\\",\\"RDS\\",\\"Route53\\",\\"SES\\",\\"VPC\\"",
      },
    },
    "MetricsMap": Object {
      "Send-Data": Object {
        "SendAnonymousData": "Yes",
      },
    },
    "RefreshRate": Object {
      "CronSchedule": Object {
        "Default": "rate(1 day)",
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Notification Configuration",
          },
          "Parameters": Array [
            "SNSEmail",
          ],
        },
      ],
      "ParameterLabels": Object {
        "SNSEmail": Object {
          "default": "Email Address",
        },
      },
    },
  },
  "Outputs": Object {
    "ServiceChecks": Object {
      "Description": "service limit checks monitored in the account",
      "Value": Object {
        "Fn::FindInMap": Array [
          "EventsMap",
          "Checks",
          "Services",
        ],
      },
    },
  },
  "Parameters": Object {
    "MasterAccount": Object {
      "AllowedPattern": "^\\\\d{12}$",
      "Description": "Account Id for the master account, eg. 111111111111",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CreateUUID": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LimtrHelperFunction",
            "Arn",
          ],
        },
      },
      "Type": "Custom::UUID",
      "UpdateReplacePolicy": "Delete",
    },
    "DeploymentData": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ANONYMOUS_DATA": Object {
          "Fn::FindInMap": Array [
            "MetricsMap",
            "Send-Data",
            "SendAnonymousData",
          ],
        },
        "SOLUTION": "SO0005s",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LimtrHelperFunction",
            "Arn",
          ],
        },
        "UUID": Object {
          "Fn::GetAtt": Array [
            "CreateUUID",
            "UUID",
          ],
        },
        "VERSION": "v5.3.3",
      },
      "Type": "Custom::DeploymentData",
      "UpdateReplacePolicy": "Delete",
    },
    "LimtrHelperFunction": Object {
      "DependsOn": Array [
        "LimtrHelperRole",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "Not a valid use case to deploy in VPC",
            },
            Object {
              "id": "W92",
              "reason": "ReservedConcurrentExecutions not needed",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Join": Array [
              "",
              Array [
                "solutions-",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "limit-monitor/v5.3.3/limtr-helper-service.zip",
        },
        "Description": "This function generates UUID, establishes cross account trust on CloudWatch Event Bus and sends anonymous metric",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LimtrHelperRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LimtrHelperRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:eu-west-1:111111111111:log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Custom_Limtr_Helper_Permissions",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TAOkRule": Object {
      "Properties": Object {
        "Description": "Limit Monitor Solution - Spoke - Rule for TA OK events",
        "EventPattern": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"account\\":[\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\"],",
              "\\"source\\":[\\"aws.trustedadvisor\\", \\"limit-monitor-solution\\"],",
              "\\"detail-type\\":[\\"Trusted Advisor Check Item Refresh Notification\\", \\"Limit Monitor Checks\\"],",
              "\\"detail\\":{",
              "\\"status\\":[",
              "\\"OK\\"",
              "],",
              "\\"check-item-detail\\":{",
              "\\"Service\\":[",
              Object {
                "Fn::FindInMap": Array [
                  "EventsMap",
                  "Checks",
                  "Services",
                ],
              },
              "]",
              "}",
              "}",
              "}",
            ],
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":events:us-east-1:",
                  Object {
                    "Ref": "MasterAccount",
                  },
                  ":event-bus/default",
                ],
              ],
            },
            "Id": "SpokeOkTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TARefreshScheduleEventsRuleB83A00F2": Object {
      "Properties": Object {
        "Description": "Schedule to refresh TA checks",
        "ScheduleExpression": Object {
          "Fn::FindInMap": Array [
            "RefreshRate",
            "CronSchedule",
            "Default",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "TARefreshScheduleLambdaFunction0F8AE46A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TARefreshScheduleLambdaFunction0F8AE46A": Object {
      "DependsOn": Array [
        "TARefreshScheduleLambdaFunctionServiceRoleDefaultPolicyB0015D14",
        "TARefreshScheduleLambdaFunctionServiceRole88DF7FDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "Not a valid use case to deploy in VPC",
            },
            Object {
              "id": "W92",
              "reason": "ReservedConcurrentExecutions not needed",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Join": Array [
              "",
              Array [
                "solutions-",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "limit-monitor/v5.3.3/limtr-refresh-service.zip",
        },
        "Description": "Serverless Limit Monitor - Lambda function to summarize service limits",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_SERVICES": Object {
              "Fn::FindInMap": Array [
                "EventsMap",
                "Checks",
                "Services",
              ],
            },
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TARefreshScheduleLambdaFunctionServiceRole88DF7FDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TARefreshScheduleLambdaFunctionAwsEventsLambdaInvokePermission1F8477682": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TARefreshScheduleLambdaFunction0F8AE46A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "TARefreshScheduleEventsRuleB83A00F2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TARefreshScheduleLambdaFunctionServiceRole88DF7FDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TARefreshScheduleLambdaFunctionServiceRoleDefaultPolicyB0015D14": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
            Object {
              "id": "F4",
              "reason": "Lambda needs the support * to perform the functions for monitoring resources.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:eu-west-1:111111111111:log-group:/aws/lambda/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "support:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "servicequotas:GetAWSDefaultServiceQuota",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TARefreshScheduleLambdaFunctionServiceRoleDefaultPolicyB0015D14",
        "Roles": Array [
          Object {
            "Ref": "TARefreshScheduleLambdaFunctionServiceRole88DF7FDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TASErrorRule": Object {
      "Properties": Object {
        "Description": "Limit Monitor Solution - Spoke - Rule for TA ERROR events",
        "EventPattern": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"account\\":[\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\"],",
              "\\"source\\":[\\"aws.trustedadvisor\\", \\"limit-monitor-solution\\"],",
              "\\"detail-type\\":[\\"Trusted Advisor Check Item Refresh Notification\\", \\"Limit Monitor Checks\\"],",
              "\\"detail\\":{",
              "\\"status\\":[",
              "\\"ERROR\\"",
              "],",
              "\\"check-item-detail\\":{",
              "\\"Service\\":[",
              Object {
                "Fn::FindInMap": Array [
                  "EventsMap",
                  "Checks",
                  "Services",
                ],
              },
              "]",
              "}",
              "}",
              "}",
            ],
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":events:us-east-1:",
                  Object {
                    "Ref": "MasterAccount",
                  },
                  ":event-bus/default",
                ],
              ],
            },
            "Id": "SpokeErrorTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TAWarnRule": Object {
      "Properties": Object {
        "Description": "Limit Monitor Solution - Spoke - Rule for TA WARN events",
        "EventPattern": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"account\\":[\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\"],",
              "\\"source\\":[\\"aws.trustedadvisor\\", \\"limit-monitor-solution\\"],",
              "\\"detail-type\\":[\\"Trusted Advisor Check Item Refresh Notification\\", \\"Limit Monitor Checks\\"],",
              "\\"detail\\":{",
              "\\"status\\":[",
              "\\"WARN\\"",
              "],",
              "\\"check-item-detail\\":{",
              "\\"Service\\":[",
              Object {
                "Fn::FindInMap": Array [
                  "EventsMap",
                  "Checks",
                  "Services",
                ],
              },
              "]",
              "}",
              "}",
              "}",
            ],
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":events:us-east-1:",
                  Object {
                    "Ref": "MasterAccount",
                  },
                  ":event-bus/default",
                ],
              ],
            },
            "Id": "SpokeWarnTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "limitCheckStack": Object {
      "Properties": Object {
        "TemplateURL": "https://s3.amazonaws.com/solutions-us-east-1/limit-monitor/v5.3.3/service-quotas-checks.template",
      },
      "Type": "AWS::CloudFormation::Stack",
    },
  },
}
`;
